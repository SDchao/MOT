from typing import List, Tuple

from PySide2.QtWidgets import QListWidget

from manage_tools.widgets.modifier_widget_parent import ModifierWidget
from operators.motlogging import logger
from operators.ws_reader import read_ws


class WsModifyWidget(ModifierWidget):
    ws_list: List[Tuple[int, int, float]]
    file_ext = ".ws"
    now_file_path = ""

    def __init__(self):
        super(WsModifyWidget, self).__init__()
        self.paint_board.init_show_all = True

        self.ws_list_widget = QListWidget(self)
        self.ws_list_widget.setMaximumWidth(200)

        self.left_v_layout.addWidget(self.ws_list_widget)

    def update_info(self):
        self.ws_list_widget.clear()
        for ws_data in self.ws_list:
            self.ws_list_widget.addItem(str(ws_data))

    def open(self, file_path: str):
        self.ws_list = read_ws(file_path)
        self.now_file_path = file_path
        self.update_info()
        return 0

    def save(self, save_path: str):
        try:
            with open(save_path, "w", encoding="utf8") as f:
                f.write("# This file was generated by modifier\n")
                for ws_data in self.ws_list:
                    f.write(str(ws_data) + "\n")

        except IOError as e:
            logger.error("Unable to save ws: " + save_path)
            logger.error(e)
            return -1
        return 0
